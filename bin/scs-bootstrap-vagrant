#!/bin/bash

set -e

sudo locale-gen en_US.UTF-8

# core tools
apt-get -y install git python-pip

# node
mkdir /usr/local/nodejs
pushd /usr/local/nodejs
wget -O- http://nodejs.org/dist/v0.10.25/node-v0.10.25-linux-x64.tar.gz | tar -xz --strip-components 1
ln -s $PWD/bin/* /usr/bin/
popd

# scs-utils
ln -s /vagrant/scs-utils /usr/local/scs-utils
pushd /usr/local/scs-utils
pip install --upgrade -r requirements.txt
npm install
( cd node_modules/node-etcd/ && npm install && npm run-script build )
ln -s $PWD/bin/* /usr/bin/
popd

# docker
wget -qO- https://get.docker.io/gpg | apt-key add -
echo 'deb http://get.docker.io/ubuntu docker main' | tee /etc/apt/sources.list.d/docker.list
apt-get update
apt-get install -y linux-image-extra-`uname -r`
apt-get install -y lxc-docker

# supervisor
apt-get install -y python-pip python-setuptools
easy_install supervisor
mkdir -p /var/{log,run}/supervisor
mkdir -p /etc/supervisor
cat > /etc/supervisor/supervisord.conf <<EOF
[unix_http_server]
file=/var/run/supervisor.sock   ; (the path to the socket file)

[inet_http_server]
port=127.0.0.1:9001

[supervisord]
logfile=/var/log/supervisor/supervisord.log                     ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=500MB   ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10     ; (num of main logfile rotation backups;default 10)
loglevel=info                  ; (log level;default info; others: debug,warn,trace)
pidfile=/var/run/supervisord.pid            ; (supervisord pidfile;default supervisord.pid)
nodaemon=false                              ; (start in foreground if true;default false)
minfds=1024                       ; (min. avail startup file descriptors;default 1024)
minprocs=200                   ; (min. avail process descriptors;default 200)
childlogdir=/var/log/supervisor             ; ('AUTO' child log dir, default $TEMP)
nocleanup=false
umask=022

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket

[include]
files = /etc/supervisor/*.ini
EOF
cat > /etc/init/supervisor.conf <<EOF
description "supervisor"
start on runlevel [2345]
stop on runlevel [!2345]
respawn
exec /usr/local/bin/supervisord -c /etc/supervisor/supervisord.conf
EOF
service supervisor start
