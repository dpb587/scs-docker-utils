#!/usr/bin/env node

var child_process = require('child_process');
var http = require('http');

var AWS = require('aws-sdk');

// --

var cli = new (require('argparse').ArgumentParser)({ description : 'Update the local hostname based off AWS resource tags.' });

cli.addArgument([ '--log-level' ], { help : 'logging level', defaultValue : 'info' });

var cliargs = cli.parseArgs();

var logger = require('npmlog');
logger.level = cliargs.log_level;

// --

logger.silly('process/args', JSON.stringify(cliargs));

// --

var reqdata = [];
var apiClient;
var apiInstance;
var apiInstanceData = [];
var apiTags;

function remapTags(tags) {
    var remap = {};

    tags.forEach(
        function (v) {
            remap[v.Key] = v.Value;
        }
    );

    return remap;
}

function loadTags() {
    apiClient.describeTags(
        {
            Filters : [
                {
                    Name : 'resource-id',
                    Values : [ apiInstance.instanceId ]
                }
            ]
        },
        function (error, data) {
            if (error) {
                throw error;
            }

            apiTags = remapTags(data.Tags);

            updateHostname();
        }
    );
}

function updateHostname() {
    var cmd = '/bin/hostname "' + apiTags['Environment'] + '--' + apiTags['Service'] + '--' + apiTags['Name'].replace('/', '--') + '"';

    logger.verbose(
        'hostname/exec',
        cmd
    );

    child_process.exec(
        cmd,
        function (error, stdout, stderr) {
            if (stdout) {
                logger.info(
                    'hostname/stdout',
                    stdout
                );
            }

            if (stderr) {
                logger.info(
                    'hostname/stderr',
                    stderr
                );
            }
        }
    );
}

var req = http.request(
    {
        host : '169.254.169.254',
        path : '/latest/dynamic/instance-identity/document'
    },
    function (res) {
        res.setEncoding('utf8');
        res.on(
            'data',
            function (chunk) {
                apiInstanceData.push(chunk);
            }
        );
        res.on(
            'end',
            function () {
                apiInstance = JSON.parse(apiInstanceData.join(''));
                apiClient = new AWS.EC2(
                    {
                        region : apiInstance.region
                    }
                );

                loadTags();
            }
        );
    }
);

req.on(
    'error',
    function (error) {
        throw error;
    }
);

req.end();
